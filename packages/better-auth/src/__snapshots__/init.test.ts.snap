// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`init > should match config 1`] = `
{
  "adapter": {
    "create": [Function],
    "delete": [Function],
    "findMany": [Function],
    "findOne": [Function],
    "update": [Function],
  },
  "appName": "Better Auth",
  "authCookies": {
    "csrfToken": {
      "name": "better-auth.csrf_token",
      "options": {
        "httpOnly": true,
        "maxAge": 604800,
        "path": "/",
        "sameSite": "lax",
        "secure": false,
      },
    },
    "dontRememberToken": {
      "name": "better-auth.dont_remember",
      "options": {
        "httpOnly": true,
        "path": "/",
        "sameSite": "lax",
        "secure": false,
      },
    },
    "nonce": {
      "name": "better-auth.nonce",
      "options": {
        "httpOnly": true,
        "maxAge": 900,
        "path": "/",
        "sameSite": "lax",
        "secure": false,
      },
    },
    "pkCodeVerifier": {
      "name": "better-auth.pk_code_verifier",
      "options": {
        "httpOnly": true,
        "maxAge": 900,
        "path": "/",
        "sameSite": "lax",
        "secure": false,
      },
    },
    "sessionToken": {
      "name": "better-auth.session_token",
      "options": {
        "httpOnly": true,
        "maxAge": 604800,
        "path": "/",
        "sameSite": "lax",
        "secure": false,
      },
    },
    "state": {
      "name": "better-auth.state",
      "options": {
        "httpOnly": true,
        "maxAge": 900,
        "path": "/",
        "sameSite": "lax",
        "secure": false,
      },
    },
  },
  "baseURL": "",
  "createAuthCookie": [Function],
  "db": Kysely {},
  "internalAdapter": {
    "createOAuthUser": [Function],
    "createSession": [Function],
    "createUser": [Function],
    "deleteSession": [Function],
    "deleteSessions": [Function],
    "findAccounts": [Function],
    "findSession": [Function],
    "findUserByEmail": [Function],
    "findUserById": [Function],
    "linkAccount": [Function],
    "updateAccount": [Function],
    "updatePassword": [Function],
    "updateSession": [Function],
    "updateUserByEmail": [Function],
  },
  "logger": {
    "box": [Function],
    "break": [Function],
    "debug": [Function],
    "error": [Function],
    "info": [Function],
    "log": [Function],
    "success": [Function],
    "warn": [Function],
  },
  "options": {
    "basePath": "/api/auth",
    "baseURL": "",
    "database": {
      "provider": "sqlite",
      "url": ":memory:",
    },
  },
  "password": {
    "hash": [Function],
    "verify": [Function],
  },
  "secret": "better-auth-secret-123456789",
  "session": {
    "expiresIn": 604800,
    "updateAge": 86400,
  },
  "tables": {
    "account": {
      "fields": {
        "accessToken": {
          "required": false,
          "type": "string",
        },
        "accessTokenExpiresAt": {
          "required": false,
          "type": "date",
        },
        "accountId": {
          "type": "string",
        },
        "idToken": {
          "required": false,
          "type": "string",
        },
        "password": {
          "required": false,
          "type": "string",
        },
        "providerId": {
          "type": "string",
        },
        "refreshToken": {
          "required": false,
          "type": "string",
        },
        "refreshTokenExpiresAt": {
          "required": false,
          "type": "date",
        },
        "userId": {
          "references": {
            "field": "id",
            "model": "user",
            "onDelete": "cascade",
          },
          "type": "string",
        },
      },
      "order": 2,
      "tableName": "account",
    },
    "session": {
      "fields": {
        "expiresAt": {
          "type": "date",
        },
        "ipAddress": {
          "required": false,
          "type": "string",
        },
        "userAgent": {
          "required": false,
          "type": "string",
        },
        "userId": {
          "references": {
            "field": "id",
            "model": "user",
            "onDelete": "cascade",
          },
          "type": "string",
        },
      },
      "order": 1,
      "tableName": "session",
    },
    "user": {
      "fields": {
        "createdAt": {
          "defaultValue": [Function],
          "type": "date",
        },
        "email": {
          "type": "string",
        },
        "emailVerified": {
          "defaultValue": [Function],
          "type": "boolean",
        },
        "image": {
          "required": false,
          "type": "string",
        },
        "name": {
          "type": "string",
        },
        "updatedAt": {
          "defaultValue": [Function],
          "type": "date",
        },
      },
      "order": 0,
      "tableName": "user",
    },
  },
}
`;
